name: Build PHP 
on: 
  workflow_call: 
    inputs:
      version:
        required: true 
        description: "The PHP Version"
        type: string
    secrets:
      dockerhub_user:
        required: true
        description: "Dockerhub username"
      dockerhub_password:
        required: true
        description: "Dockerhub password"
jobs: 
  Base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ["","Xdebug"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Base Image
        uses: ./.github/actions/docker-build
        with:
          dockerhub_user: ${{ secrets.dockerhub_user }}
          dockerhub_password: ${{ secrets.dockerhub_password }}
          build_context: ./PHP/Base
          build_tags: |
            ggmartinez/php:${{ inputs.version }}
          build_args: |
            PHP_VERSION=${{ inputs.version }}
  Base-Xdebug:
    runs-on: ubuntu-latest
    needs: Base
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build image and push to Docker Hub
        uses: ./.github/actions/docker-build
        with:
          dockerhub_user: ${{ secrets.dockerhub_user }}
          dockerhub_password: ${{ secrets.dockerhub_password }}
          build_context: ./PHP/Base-Xdebug
          build_tags: |
            ggmartinez/php:${{ inputs.version }}-xdebug
          build_args: |
            PHP_VERSION=${{ inputs.version }}
  Apache:
    runs-on: ubuntu-latest
    needs: Base
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build image and push to Docker Hub
        uses: ./.github/actions/docker-build
        with:
          dockerhub_user: ${{ secrets.dockerhub_user }}
          dockerhub_password: ${{ secrets.dockerhub_password }}
          build_context: ./PHP/Apache
          build_tags: |
            ggmartinez/php:${{ inputs.version }}-apache
          build_args: |
            PHP_VERSION=${{ inputs.version }}
  Apache-Xdebug:
    runs-on: ubuntu-latest
    needs: Apache
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build image and push to Docker Hub
        uses: ./.github/actions/docker-build
        with:
          dockerhub_user: ${{ secrets.dockerhub_user }}
          dockerhub_password: ${{ secrets.dockerhub_password }}
          build_context: ./PHP/Apache-Xdebug
          build_tags: |
            ggmartinez/php:${{ inputs.version }}-apache-xdebug
          build_args: |
            PHP_VERSION=${{ inputs.version }}
  Laravel:
    runs-on: ubuntu-latest
    needs: Apache
    strategy:
      matrix:
        images: ["${{ inputs.version }}","${{ inputs.version }}-xdebug"]
        name: ["php-${{ inputs.version }}","php-${{ inputs.version }}-xdebug"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build image and push to Docker Hub
        uses: ./.github/actions/docker-build
        with:
          dockerhub_user: ${{ secrets.dockerhub_user }}
          dockerhub_password: ${{ secrets.dockerhub_password }}
          build_context: ./PHP/Laravel
          build_tags: |
            ggmartinez/laravel:${{ matrix.name }}
          build_args: |
            PHP_VERSION=${{ inputs.version }}
            IMAGE=${{ matrix.images }}
  Laravel-Apache:
    runs-on: ubuntu-latest
    needs: Apache
    strategy:
      matrix:
        images: ["${{ inputs.version }}-apache","${{ inputs.version }}-apache-xdebug"]
        name: ["php-${{ inputs.version }}-apache","php-${{ inputs.version }}-apache-xdebug"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build image and push to Docker Hub
        uses: ./.github/actions/docker-build
        with:
          dockerhub_user: ${{ secrets.dockerhub_user }}
          dockerhub_password: ${{ secrets.dockerhub_password }}
          build_context: ./PHP/Laravel-Apache
          build_tags: |
            ggmartinez/laravel:${{ matrix.name }}
          build_args: |
            PHP_VERSION=${{ inputs.version }}
            IMAGE=${{ matrix.images }}

